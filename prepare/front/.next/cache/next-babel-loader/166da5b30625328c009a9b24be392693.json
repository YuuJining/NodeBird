{"ast":null,"code":"var _jsxFileName = \"/Users/yujinlee/project/NodeBird/prepare/front/components/PostCard.js\";\nimport React, { useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport PostImages from '../components/PostImages';\nimport { useSelector } from 'react-redux';\nimport { Button, Card, Popover } from 'antd';\nimport { EllipsisOutlined, HeartOutlined, MessageOutlined, RetweetOutlined, HeartTwoTone } from '@ant-design/icons';\nimport Avatar from 'antd/lib/avatar/avatar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst PostCard = ({\n  post\n}) => {\n  const id = useSelector(state => {\n    var _state$user$me;\n\n    return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  });\n  const [liked, setLiked] = useState(false);\n  const [commentFormOpened, setCommentFormOpened] = useState(false);\n  const onToggleLike = useCallback(() => {\n    setLiked(prev => !prev);\n  }, []);\n  const onToggleComment = useCallback(() => {\n    setCommentFormOpened(prev => !prev);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginBottom: 20\n    },\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      cover: post.Images[0] && /*#__PURE__*/_jsxDEV(PostImages, {\n        images: post.Images\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 42\n      }, this),\n      actions: [/*#__PURE__*/_jsxDEV(RetweetOutlined, {}, \"tweet\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 21\n      }, this), liked ? /*#__PURE__*/_jsxDEV(HeartTwoTone, {\n        twoToneColor: \"#eb2f96\",\n        onClick: onToggleLike\n      }, \"heart\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 27\n      }, this) : /*#__PURE__*/_jsxDEV(HeartOutlined, {\n        onClick: onToggleLike\n      }, \"heart\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 27\n      }, this), /*#__PURE__*/_jsxDEV(MessageOutlined, {\n        onClick: onToggleComment\n      }, \"comment\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Popover, {\n        content: /*#__PURE__*/_jsxDEV(Button.Group, {\n          children: id && post.User.id === id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              children: \"\\uC218\\uC815\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"danger\",\n              children: \"\\uC0AD\\uC81C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(Button, {\n            children: \"\\uC2E0\\uACE0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 25\n        }, this),\n        children: /*#__PURE__*/_jsxDEV(EllipsisOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 25\n        }, this)\n      }, \"more\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 21\n      }, this)],\n      children: [/*#__PURE__*/_jsxDEV(Card.Meta, {\n        avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n          children: post.User.nickname[0]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 29\n        }, this),\n        title: post.User.nickname,\n        description: post.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), commentFormOpened && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"\\uB313\\uAE00 \\uBD80\\uBD84\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n};\n\nPostCard.propTypes = {\n  post: PropTypes.shape({\n    id: PropTypes.number,\n    User: PropTypes.object,\n    content: PropTypes.string,\n    createdAt: PropTypes.object,\n    Images: PropTypes.arrayOf(PropTypes.object),\n    Comments: PropTypes.arrayOf(PropTypes.object)\n  }).isRequired\n};\nexport default PostCard;","map":{"version":3,"sources":["/Users/yujinlee/project/NodeBird/prepare/front/components/PostCard.js"],"names":["React","useCallback","PropTypes","PostImages","useSelector","Button","Card","Popover","EllipsisOutlined","HeartOutlined","MessageOutlined","RetweetOutlined","HeartTwoTone","Avatar","PostCard","post","id","state","user","me","liked","setLiked","useState","commentFormOpened","setCommentFormOpened","onToggleLike","prev","onToggleComment","marginBottom","Images","User","nickname","content","propTypes","shape","number","object","string","createdAt","arrayOf","Comments","isRequired"],"mappings":"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","sourcesContent":["import React, { useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport PostImages from '../components/PostImages';\nimport { useSelector } from 'react-redux';\nimport { Button, Card, Popover } from 'antd';\nimport { EllipsisOutlined, HeartOutlined, MessageOutlined, RetweetOutlined, HeartTwoTone } from '@ant-design/icons';\nimport Avatar from 'antd/lib/avatar/avatar';\n\nconst PostCard = ({ post }) => {\n    const id = useSelector((state)=>state.user.me?.id);\n    const [liked, setLiked] = useState(false);\n    const [commentFormOpened, setCommentFormOpened] = useState(false);\n    const onToggleLike = useCallback(() => {\n        setLiked((prev)=>!prev);\n    },[])\n    const onToggleComment = useCallback(()=> {\n        setCommentFormOpened((prev)=>!prev);\n    },[])\n    return(\n        <div style={{ marginBottom: 20 }}>\n            <Card\n                cover={post.Images[0] && <PostImages images={post.Images} />}\n                actions={[\n                    <RetweetOutlined key=\"tweet\" />,\n                    liked\n                        ? <HeartTwoTone twoToneColor=\"#eb2f96\" key=\"heart\" onClick={onToggleLike} />\n                        : <HeartOutlined key=\"heart\" onClick={onToggleLike} />,\n                    <MessageOutlined key=\"comment\" onClick={onToggleComment}/>,\n                    <Popover key=\"more\" content={(\n                        <Button.Group>\n                            {id && post.User.id === id  ? (\n                                <>\n                                    <Button>수정</Button>\n                                    <Button type=\"danger\">삭제</Button>\n                                </>\n                            ) : <Button>신고</Button> }\n                        </Button.Group>\n                    )}>\n                        <EllipsisOutlined />\n                    </Popover>\n                ]}\n            >\n                <Card.Meta \n                    avatar={<Avatar>{post.User.nickname[0]}</Avatar>}\n                    title={post.User.nickname}\n                    description={post.content}\n                />\n                {commentFormOpened && (\n                    <div>댓글 부분</div>\n                ) }\n            </Card>\n        </div>\n    );\n};\n\nPostCard.propTypes = {\n    post: PropTypes.shape({\n        id: PropTypes.number,\n        User: PropTypes.object,\n        content: PropTypes.string,\n        createdAt: PropTypes.object,\n        Images: PropTypes.arrayOf(PropTypes.object),\n        Comments: PropTypes.arrayOf(PropTypes.object)\n    }).isRequired,\n}\n\nexport default PostCard;"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/yujinlee/project/NodeBird/prepare/front/components/PostCard.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\nimport { Button, Card, Popover } from 'antd';\nimport { EllipsisOutlined, HeartOutlined, MessageOutlined, RetweetOutlined } from '@ant-design/icons';\nimport Avatar from 'antd/lib/avatar/avatar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar PostCard = function PostCard(_ref) {\n  _s();\n\n  var post = _ref.post;\n  var id = useSelector(function (state) {\n    var _state$user$me;\n\n    return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  });\n  return /*#__PURE__*/_jsxDEV(Card, {\n    cover: post.Images[0] && /*#__PURE__*/_jsxDEV(PostImages, {\n      images: post.Images\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 38\n    }, _this),\n    actions: [/*#__PURE__*/_jsxDEV(RetweetOutlined, {}, \"tweet\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 17\n    }, _this), /*#__PURE__*/_jsxDEV(HeartOutlined, {}, \"heart\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 17\n    }, _this), /*#__PURE__*/_jsxDEV(MessageOutlined, {}, \"comment\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 17\n    }, _this), /*#__PURE__*/_jsxDEV(Popover, {\n      content: /*#__PURE__*/_jsxDEV(Button.Group, {\n        children: id && post.User.id === id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            children: \"\\uC218\\uC815\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 33\n          }, _this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"danger\",\n            children: \"\\uC0AD\\uC81C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 33\n          }, _this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(Button, {\n          children: \"\\uC2E0\\uACE0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 29\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 21\n      }, _this),\n      children: /*#__PURE__*/_jsxDEV(EllipsisOutlined, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 21\n      }, _this)\n    }, \"more\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 17\n    }, _this)],\n    children: [/*#__PURE__*/_jsxDEV(Card.Meta, {\n      avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n        children: post.User.nickname[0]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 25\n      }, _this),\n      title: post.User.nickname,\n      description: post.content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(Image, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(PostCard, \"FJdoDJNyUlJ5WKWdRipc5DguCUQ=\", false, function () {\n  return [useSelector];\n});\n\n_c = PostCard;\nPostCard.propTypes = {\n  post: PropTypes.shape({\n    id: PropTypes.number,\n    User: PropTypes.object,\n    content: PropTypes.string,\n    createdAt: PropTypes.object,\n    Images: PropTypes.arrayOf(PropTypes.object),\n    Comments: PropTypes.arrayOf(PropTypes.object)\n  }).isRequired\n};\nexport default PostCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostCard\");","map":{"version":3,"sources":["/Users/yujinlee/project/NodeBird/prepare/front/components/PostCard.js"],"names":["React","PropTypes","useSelector","Button","Card","Popover","EllipsisOutlined","HeartOutlined","MessageOutlined","RetweetOutlined","Avatar","PostCard","post","id","state","user","me","Images","User","nickname","content","propTypes","shape","number","object","string","createdAt","arrayOf","Comments","isRequired"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,OAAvB,QAAsC,MAAtC;AACA,SAASC,gBAAT,EAA2BC,aAA3B,EAA0CC,eAA1C,EAA2DC,eAA3D,QAAkF,mBAAlF;AACA,OAAOC,MAAP,MAAmB,wBAAnB;;;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,OAAc;AAAA;;AAAA,MAAXC,IAAW,QAAXA,IAAW;AAC3B,MAAMC,EAAE,GAAGX,WAAW,CAAC,UAACY,KAAD;AAAA;;AAAA,6BAASA,KAAK,CAACC,IAAN,CAAWC,EAApB,mDAAS,eAAeH,EAAxB;AAAA,GAAD,CAAtB;AACA,sBACI,QAAC,IAAD;AACI,IAAA,KAAK,EAAED,IAAI,CAACK,MAAL,CAAY,CAAZ,kBAAkB,QAAC,UAAD;AAAY,MAAA,MAAM,EAAEL,IAAI,CAACK;AAAzB;AAAA;AAAA;AAAA;AAAA,aAD7B;AAEI,IAAA,OAAO,EAAE,cACL,QAAC,eAAD,MAAqB,OAArB;AAAA;AAAA;AAAA;AAAA,aADK,eAEL,QAAC,aAAD,MAAmB,OAAnB;AAAA;AAAA;AAAA;AAAA,aAFK,eAGL,QAAC,eAAD,MAAqB,SAArB;AAAA;AAAA;AAAA;AAAA,aAHK,eAIL,QAAC,OAAD;AAAoB,MAAA,OAAO,eACvB,QAAC,MAAD,CAAQ,KAAR;AAAA,kBACKJ,EAAE,IAAID,IAAI,CAACM,IAAL,CAAUL,EAAV,KAAiBA,EAAvB,gBACG;AAAA,kCACI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,eAEI,QAAC,MAAD;AAAQ,YAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFJ;AAAA,wBADH,gBAKG,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AANR;AAAA;AAAA;AAAA;AAAA,eADJ;AAAA,6BAUI,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAVJ,OAAa,MAAb;AAAA;AAAA;AAAA;AAAA,aAJK,CAFb;AAAA,4BAoBI,QAAC,IAAD,CAAM,IAAN;AACI,MAAA,MAAM,eAAE,QAAC,MAAD;AAAA,kBAASD,IAAI,CAACM,IAAL,CAAUC,QAAV,CAAmB,CAAnB;AAAT;AAAA;AAAA;AAAA;AAAA,eADZ;AAEI,MAAA,KAAK,EAAEP,IAAI,CAACM,IAAL,CAAUC,QAFrB;AAGI,MAAA,WAAW,EAAEP,IAAI,CAACQ;AAHtB;AAAA;AAAA;AAAA;AAAA,aApBJ,eAyBI,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,aAzBJ;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ;AA6BH,CA/BD;;GAAMT,Q;UACST,W;;;KADTS,Q;AAiCNA,QAAQ,CAACU,SAAT,GAAqB;AACjBT,EAAAA,IAAI,EAAEX,SAAS,CAACqB,KAAV,CAAgB;AAClBT,IAAAA,EAAE,EAAEZ,SAAS,CAACsB,MADI;AAElBL,IAAAA,IAAI,EAAEjB,SAAS,CAACuB,MAFE;AAGlBJ,IAAAA,OAAO,EAAEnB,SAAS,CAACwB,MAHD;AAIlBC,IAAAA,SAAS,EAAEzB,SAAS,CAACuB,MAJH;AAKlBP,IAAAA,MAAM,EAAEhB,SAAS,CAAC0B,OAAV,CAAkB1B,SAAS,CAACuB,MAA5B,CALU;AAMlBI,IAAAA,QAAQ,EAAE3B,SAAS,CAAC0B,OAAV,CAAkB1B,SAAS,CAACuB,MAA5B;AANQ,GAAhB,EAOHK;AARc,CAArB;AAWA,eAAelB,QAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\nimport { Button, Card, Popover } from 'antd';\nimport { EllipsisOutlined, HeartOutlined, MessageOutlined, RetweetOutlined } from '@ant-design/icons';\nimport Avatar from 'antd/lib/avatar/avatar';\n\nconst PostCard = ({ post }) => {\n    const id = useSelector((state)=>state.user.me?.id);\n    return(\n        <Card\n            cover={post.Images[0] && <PostImages images={post.Images} />}\n            actions={[\n                <RetweetOutlined key=\"tweet\" />,\n                <HeartOutlined key=\"heart\" />,\n                <MessageOutlined key=\"comment\" />,\n                <Popover key=\"more\" content={(\n                    <Button.Group>\n                        {id && post.User.id === id  ? (\n                            <>\n                                <Button>수정</Button>\n                                <Button type=\"danger\">삭제</Button>\n                            </>\n                        ) : <Button>신고</Button> }\n                    </Button.Group>\n                )}>\n                    <EllipsisOutlined />\n                </Popover>\n            ]}\n        >\n            <Card.Meta \n                avatar={<Avatar>{post.User.nickname[0]}</Avatar>}\n                title={post.User.nickname}\n                description={post.content}\n            />\n            <Image />\n        </Card>\n    );\n};\n\nPostCard.propTypes = {\n    post: PropTypes.shape({\n        id: PropTypes.number,\n        User: PropTypes.object,\n        content: PropTypes.string,\n        createdAt: PropTypes.object,\n        Images: PropTypes.arrayOf(PropTypes.object),\n        Comments: PropTypes.arrayOf(PropTypes.object)\n    }).isRequired,\n}\n\nexport default PostCard;"]},"metadata":{},"sourceType":"module"}